{"version":3,"sources":["components/timer.js","components/app.js","index.js"],"names":["Timer","start","e","preventDefault","state","intervalId","clearInterval","time","setInterval","setState","convertedTime","props","convertTime","stop","reset","handleChange","val","target","value","handleSubmit","this","onSubmit","type","onChange","onClick","React","Component","App","dateTime","Date","setSeconds","toISOString","substr","ReactDOM","render","document","querySelector"],"mappings":"iNAuFeA,E,YApFX,aAAc,IAAD,8BACT,+CAKJC,MAAQ,SAACC,GAOL,GANAA,EAAEC,iBAEC,EAAKC,MAAMC,YACVC,cAAc,EAAKF,MAAMC,cAG1B,EAAKD,MAAMG,MAAQ,GAAtB,CAIA,IAAIF,EAAaG,YAAY,WACzB,IAAID,EAAO,EAAKH,MAAMG,KAAO,EAC7B,EAAKE,SAAS,CAACF,SACf,IAAIG,EAAgB,EAAKC,MAAMC,YAAY,EAAKR,MAAMG,MACtD,EAAKE,SAAS,CAACC,mBAChB,KACH,EAAKD,SAAS,CAACJ,iBAvBN,EAyBbQ,KAAO,SAACX,GACJA,EAAEC,iBACFG,cAAc,EAAKF,MAAMC,aA3BhB,EA8BbS,MAAQ,SAACZ,GACLA,EAAEC,iBAEF,EAAKM,SAAS,CAACF,KAAM,EAAGG,cAAe,KAjC9B,EAoCbK,aAAc,SAACb,GACXA,EAAEC,iBACF,IAAIa,EAAMd,EAAEe,OAAOC,MACnB,EAAKT,SAAS,CAACO,MAAKT,KAAMS,IAC1B,IAAIN,EAAgB,EAAKC,MAAMC,YAAYI,GAC3C,EAAKP,SAAS,CAACC,mBAzCN,EA4CbS,aAAe,SAACjB,GACZA,EAAEC,iBACF,IAAII,EAAO,EAAKH,MAAMY,IACtB,EAAKP,SAAS,CAACF,UA7Cf,EAAKH,MAAQ,CAACG,KAAM,EAAGF,WAAY,KAAMW,IAAK,EAAGN,cAAe,GAFvD,E,sEAyDT,OACI,6BAEI,4BACKU,KAAKhB,MAAMG,KADhB,eAIA,4BACKa,KAAKhB,MAAMM,cADhB,kBAGA,0BAAMW,SAAUD,KAAKD,cACjB,2BAAOG,KAAK,OACJC,SAAUH,KAAKL,aACfG,MAAQE,KAAKhB,MAAMY,MAG3B,wCAGJ,4BAAQQ,QAASJ,KAAKnB,OAAtB,SACA,4BAAQuB,QAASJ,KAAKP,MAAtB,QACA,4BAAQW,QAASJ,KAAKN,OAAtB,c,GA/EIW,IAAMC,WC6BXC,E,YA1BX,aAAc,IAAD,8BACT,+CAIJf,YAAc,SAACI,GACX,IAAIY,EAAW,IAAIC,KAAK,MAGxB,OAFAD,EAASE,WAAWd,GACNY,EAASG,cAAcC,OAAO,GAAG,IAN/C,EAAK5B,MAAQ,GAFJ,E,sEAcT,OACI,6BAEI,kBAAC,EAAD,CAAOQ,YAAaQ,KAAKR,mB,GAlBvBa,IAAMC,WCCxBO,IAASC,OACL,kBAAC,EAAD,MAASC,SAASC,cAAc,W","file":"static/js/main.29c0ab50.chunk.js","sourcesContent":["import React from 'react'\n\nclass Timer extends React.Component{\n    constructor(){\n        super();\n        this.state = {time: 0, intervalId: null, val: 0, convertedTime: 0}\n    }\n\n\n    start = (e) =>{\n        e.preventDefault();\n\n        if(this.state.intervalId){\n            clearInterval(this.state.intervalId)\n        }\n\n        if(this.state.time <= 0){\n            return\n        }\n\n        let intervalId = setInterval(() =>{\n            let time = this.state.time - 1;\n            this.setState({time})\n            let convertedTime = this.props.convertTime(this.state.time)\n            this.setState({convertedTime})\n        }, 1000)\n        this.setState({intervalId})\n    }\n    stop = (e) =>{\n        e.preventDefault();\n        clearInterval(this.state.intervalId);\n\n    }\n    reset = (e) =>{\n        e.preventDefault();\n        // convertedTime = this.props.convertTime(0)\n        this.setState({time: 0, convertedTime: 0})\n    }\n\n    handleChange= (e) =>{\n        e.preventDefault();\n        let val = e.target.value\n        this.setState({val, time: val})\n        let convertedTime = this.props.convertTime(val)\n        this.setState({convertedTime})\n    }\n\n    handleSubmit = (e) =>{\n        e.preventDefault();\n        let time = this.state.val\n        this.setState({time})\n        \n    }\n\n\n\n\n\n\n    render(){\n        return (\n            <div>\n                \n                <h1>\n                    {this.state.time} in seconds\n                </h1>\n                    \n                <h1>\n                    {this.state.convertedTime} in Hr:Min:Sec\n                </h1>\n                <form onSubmit={this.handleSubmit}>\n                    <input type=\"text\"\n                            onChange={this.handleChange}\n                            value ={this.state.val}\n                    >\n                    </input>\n                    <button>Set</button>\n                </form>\n                \n                <button onClick={this.start}>start</button>\n                <button onClick={this.stop}>stop</button>\n                <button onClick={this.reset}>reset</button>\n            </div>\n        )\n    }\n}\n\nexport default Timer","import React from 'react'\nimport Timer from './timer'\n\n\nclass App extends React.Component{\n    constructor(){\n        super();\n        this.state = { }\n    }\n\n    convertTime = (val) =>{\n        let dateTime = new Date(null)\n        dateTime.setSeconds(val)\n        let newTime = dateTime.toISOString().substr(11,8);\n        return newTime\n    }\n\n\n    render(){\n        return(\n            <div>\n\n                <Timer convertTime={this.convertTime}/>\n\n            </div>\n        )\n    }\n}\n\n\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app'\n\n\nReactDOM.render(\n    <App />, document.querySelector('#root')\n);"],"sourceRoot":""}